button_card_templates: !include button_card_templates.yaml

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  vardagsrum  studio  sovrum  ."
        "sidebar  media       övrigt  house   ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  vardagsrum  sovrum   ."
            ".  studio      övrigt   ."
            ".  media       house    ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  vardagsrum  sovrum  ."
            "sidebar  studio      övrigt  ."
            "sidebar  media       house   ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:
      - type: custom:button-card #extra_styles fix
        styles: { card: [display: none] }

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:
          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar

          - type: conditional
            conditions:
              - entity: input_boolean.laundry_display
                state: "on"
            card:
              type: custom:button-card
              entity: timer.laundry
              hold_action:
                action: call-service
                service: input_boolean.turn_off
                service_data:
                  entity_id: input_boolean.laundry_display
              template: laundry

      #################################################
      #                                               #
      #                  VARDAGSRUM                   #
      #                                               #
      #################################################

      - type: grid
        title: Setup
        view_layout:
          grid-area: vardagsrum
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.ambilight
            name: LED Monitor
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: light.mesa
            name: LED Mesa
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: switch.monitor_power
            name: Monitores
            state_display: >
              [[[
                console.log('teste: ', variables.state)
                if (variables.state === false || variables.state === 'off') {
                  return 'Desligado';
                }
                if (variables.state === true || variables.state === 'on') {
                  return 'Ligado';
                }
              ]]]
            template:
              - base
              - icon_tv
              - loader

          - type: custom:button-card
            entity: switch.hyperion_controller
            name: Ambilight
            # card_mod:
            #   style: |
            #     :host {
            #       {% if is_state('switch.hyperion_controller', 'on') and is_state('light.first_led_hardware_instance', 'unavaiable')%}
            #         color: '#4285f4';
            #         pointer-events: none
            #       {% endif %}
            #     }
            template:
              - base
              - icon_hue
              - loader

      #################################################
      #                                               #
      #                    STUDIO                     #
      #                                               #
      #################################################

      - type: grid
        title: Studio
        view_layout:
          grid-area: studio
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.mesa
            name: Teste
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: light.group_taklampor
            name: Teste
            template:
              - light
              - icon_spot

          - type: custom:button-card
            entity: switch.computer_imac
            name: PC
            hold_action: !include popup/studio_dator.yaml
            template:
              - base
              - icon_imac
              - loader
              - lock
            variables:
              lock: >
                [[[
                  let lock = states['lock.dator'];
                  return lock === undefined || lock.state;
                ]]]
              trigger: >
                [[[
                  let trigger = states['script.home_leave'];
                  return trigger === undefined || trigger;
                ]]]

          - type: custom:button-card
            entity: media_player.echo_dot_de_jonathan
            name: Alexa
            # hold_action: !include popup/studio_monitorer.yaml
            template:
              - base
              - icon_monitors
              - circle
              - loader
            variables:
              circle_input: >
                [[[
                  let sensor = states['sensor.monitors_volume'];
                  return sensor === undefined || sensor.state;
                ]]]

      #################################################
      #                                               #
      #                    SOVRUM                     #
      #                                               #
      #################################################

      - type: grid
        title: Sovrum
        view_layout:
          grid-area: sovrum
        columns: 2
        cards:
          - type: custom:button-card
            entity: light.group_sanglampor
            name: Sänglampor
            template:
              - light
              - icon_lamp

          - type: custom:button-card
            entity: climate.ac
            name: Klimat
            hold_action: !include popup/ar_climate.yaml
            template:
              - base
              - icon_climate
              - climate
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    return entity.state === 'cool' ?
                      entity.attributes.temperature :
                      entity.attributes.current_temperature;
                  }
                ]]]

          - type: custom:button-card
            entity: switch.playstation_5
            name: Playstation
            hold_action: !include popup/vardagsrum_playstation.yaml
            template:
              - base
              - icon_ps5
              - loader

          - type: custom:button-card
            entity: media_player.samsung_tv
            name: "Tv\u00B2"
            hold_action: !include popup/sovrum_tv2.yaml
            template:
              - base
              - icon_tv
              - loader

      #################################################
      #                                               #
      #                     MEDIA                     #
      #                                               #
      #################################################

      - type: grid
        title: Media
        view_layout:
          grid-area: media
        columns: 1
        cards:
          - type: custom:swipe-card
            parameters:
              speed: 550
              spaceBetween: 40
              threshold: 5
            cards:
              - type: horizontal-stack
                cards:
                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state_not: Spotify

                    card:
                      type: custom:button-card
                      entity: sensor.plex_recently_added
                      name: Último adicionado
                      tap_action:
                        action: none
                      template:
                        - conditional_media
                        - icon_plex

                  - type: conditional
                    conditions:
                      - entity: select.conditional_media
                        state: Spotify
                    card:
                      type: custom:button-card
                      entity: media_player.spotify
                      template:
                        - conditional_media
                        - icon_spotify

              - type: grid
                columns: 2
                cards:
                  - type: custom:button-card
                    entity: media_player.spotify
                    name: Spotify
                    template:
                      - media
                      - icon_spotify

      #################################################
      #                                               #
      #                    Outro                      #
      #                                               #
      #################################################

      # - type: grid
      #   title: Övrigt
      #   view_layout:
      #     grid-area: övrigt
      #   columns: 2
      #   cards:
      #     - type: custom:button-card
      #       entity: light.group_badrum
      #       name: Badrum
      #       template:
      #         - light
      #         - icon_bathroom

      #     - type: custom:button-card
      #       entity: switch.gosund_fan_switch
      #       name: "Fläkt\u00B2"
      #       hold_action: !include popup/studio_flakt.yaml
      #       template:
      #         - base
      #         - icon_fan2
      #         - loader

      #     - type: custom:button-card
      #       entity: light.garderob
      #       name: Garderob
      #       template:
      #         - light
      #         - icon_closet

      #     - type: custom:button-card
      #       entity: light.group_hall
      #       name: Hall
      #       template:
      #         - light
      #         - icon_spot

      #################################################
      #                                               #
      #                     HOUSE                     #
      #                                               #
      #################################################

      - type: grid
        title: House
        view_layout:
          grid-area: övrigt
        columns: 2
        cards:
          - type: custom:button-card
            entity: person.jonathan_ferraz
            name: Jonathan Ferraz
            triggers_update:
              - sensor.jonathan_last_changed
            tap_action: !include popup/house_jonathan.yaml
            variables:
              retain: sensor.jonathan_last_changed
            template: person

          - type: custom:button-card
            entity: person.matheus_ferraz
            name: Matheus Ferraz
            triggers_update:
              - sensor.matheus_last_changed
            tap_action: !include popup/house_jonathan.yaml
            variables:
              retain: sensor.matheus_last_changed
            template: person

          - type: custom:button-card
            entity: script.home_leave
            name: Fechar tudo
            hold_action:
              action: none
            template:
              - base
              - icon_away

          - type: custom:button-card
            entity: script.home_arrive
            name: House
            hold_action:
              action: none
            template:
              - base
              - icon_home

      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:
          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:nas"></ha-icon> HASS
            tap_action: !include popup/footer/hass.yaml
            variables:
              notify: >
                [[[
                  let status = states['sensor.nas_volume_1_status'],
                    security = states['binary_sensor.nas_security_status'],
                    disk_use = states['sensor.disk_use_percent'],
                    nas_update = states['binary_sensor.nas_update_available'];
                  if (status && security && disk_use && nas_update) {
                    return nas_update.state === 'on'
                      ? 1
                      : status.state === 'background_scrubbing' ||
                        security.state === 'on' ||
                        parseFloat(disk_use.state) >= 85;
                  }
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Updates
            tap_action: !include popup/footer/updater.yaml
            variables:
              notify: >
                [[[
                  let hass_installed = hass.config.version,
                    hass_version_latest = states['sensor.hass_version_latest'],
                    hass_version_latest_beta = states['sensor.hass_version_latest_beta'],
                    hacs = states['sensor.hacs'];

                  if (hass_version_latest && hass_version_latest.state.includes('.')
                    && hass_version_latest_beta && hass_version_latest_beta.state.includes('.')
                    && hacs && Number.isInteger(parseInt(hacs.state))) {

                    let hass_latest = hass_installed.includes('b')
                        ? hass_version_latest_beta.state
                        : hass_version_latest.state,
                      hass_count = hass_installed !== hass_latest ? 1 : 0;
                    return hass_count + parseInt(hacs.state);
                  }
                  return 0;
                ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:tablet"></ha-icon> PC Gamer
            tap_action: !include popup/footer/gamer_pc.yaml
            variables:
              notify: >
                [[[
                  let plugged_in = states['binary_sensor.galaxy_tab_a_plugged_in'];
                  if (plugged_in) {
                    return plugged_in.state === 'off';
                  }
                ]]]
            template: footer
