button_card_templates: !include button_card_templates.yaml

views: !include_dir_merge_list views

sidebar:
  title: Home
  style: |
    :host {
        --sidebar-background: #1014165e;
        --sidebar-text-color: #bcbebf;
    }
    .sidebarMenu li.active {
       background-color: #232729!important;
    }
    .digitalClock {
      text-align: left;
      padding-bottom: 1px;
      padding-top: 20px
      font-size: 205px;
      line-height: 95px;
    }
    .date {
      text-align: left;
    }
  hideTopMenu: true
  showTopMenuOnMobile: true
  width:
    mobile: 0
    tablet: 40
    desktop: 20
  breakpoints:
    mobile: 768
    tablet: 1024
  clock: false
  digitalClock: true
  digitalClockWithSeconds: true
  date: true
  dateFormat: dddd, D MMMM
  bottomcard: true
  sidebarMenu:
    - action: navigate
      navigation_path: "/lovelace/bedroom"
      name: "Bedroom"
      icon: mdi:home
      active: true
    - action: navigate
      navigation_path: "/lovelace/mining"
      name: "Mining"
      icon: mdi:currency-btc
  bottomCard:
    type: horizontal-stack
    cardOptions:
      cards:
        - type: horizontal-stack
          view_layout:
            grid-area: footer
          cards:
            - type: custom:button-card
              name: >
                <ha-icon icon="mdi:nas"></ha-icon> HASS
              tap_action: !include popup/footer/hass.yaml
              variables:
                notify: >
                  [[[
                    let status = states['sensor.nas_volume_1_status'],
                      security = states['binary_sensor.nas_security_status'],
                      disk_use = states['sensor.disk_use_percent'],
                      nas_update = states['binary_sensor.nas_update_available'];
                    if (status && security && disk_use && nas_update) {
                      return nas_update.state === 'on'
                        ? 1
                        : status.state === 'background_scrubbing' ||
                          security.state === 'on' ||
                          parseFloat(disk_use.state) >= 85;
                    }
                  ]]]
              template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Updates
          tap_action: !include popup/footer/updates.yaml
          variables:
            notify: >
              [[[
                let hass_installed = hass.config.version,
                  hass_version_latest = states['sensor.hass_version_latest'],
                  hacs = states['sensor.hacs'];

                if (hass_version_latest && hass_version_latest.state.includes('.')
                  && hacs && Number.isInteger(parseInt(hacs.state))) {

                  let hass_latest = hass_version_latest.state,
                    hass_count = hass_installed !== hass_latest ? 1 : 0;
                  return hass_count + parseInt(hacs.state);
                }
                return 0;
              ]]]
          template: footer
    cardStyle: |
      :host {
        width: 100%;
      }
  template: |
    <ul>
      <li>
        {% set time = now().hour %}
        {% if time <= 1 %} Boa noite {{'\U0001F611'}}
        {% elif time <= 3 %} Boa noite {{'\U0001F62A'}}
        {% elif time <= 5 %} Boa noite {{'\U0001F634'}}
        {% elif time <= 7 %} Bom dia {{'\U0001F4A9'}}
        {% elif time <= 9 %} Bom dia {{'\u2615\uFE0F'}}
        {% elif time <= 12 %} Bom dia {{'\U0001F642'}}
        {% elif time <= 13 %} Boa tarde {{'\U0001F60A'}}
        {% elif time <= 15 %} Boa tarde {{'\U0001F60E'}}
        {% elif time <= 17 %} Boa tarde {{'\U0001F44B\U0001F3FB'}}
        {% elif time <= 19 %} Boa noite {{'\U0001F44B\U0001F3FB'}}
        {% elif time <= 22 %} Boa noite {{'\U0001F60C'}}
        {% elif time <= 23 %} Boa noite {{'\U0001F974'}}
        {% else %} Boa noite {{'\U0001F974'}}
        {% endif %}
      </li>
      <li>
        {%- set temperature = states('sensor.weather_temperature') | float %}
        {%- set apparent = states('sensor.home_apparent_temperature') | round %}
        {%- set precip = states('sensor.weather_precipitation') | round %}
        {% if not is_state('sensor.home_temperature', 'unknown') %}
          Estão {{ apparent }}°c, com {{ precip }}% de risco de chuva {{ '\u2614\uFE0F' if precip > 30 }}
        {%- else %}
          Não foi possível carregar as informações meteorológicas...
        {%- endif %}
      </li>
    </ul>

  # bottomCard:
  #   type: custom:mini-graph-card
  #   cardOptions:
  #     entities:
  #       - sensor.weather_temperature
  #   cardStyle: |
  #     :host {
  #       width: 100%;
  #       position: absolute;
  #       bottom: 0;
  #       left: 0;
  #     }
  #     ha-card {
  #       background: transparent;
  #       color: #FFF;
  #       overflow: hidden !important;
  #       box-shadow: none !important;
  #     }
