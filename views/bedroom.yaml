- type: custom:grid-layout
  title: Bedroom
  path: bedroom
  layout:
    #default
    margin: 0
    # grid-gap: var(--custom-layout-card-padding)
    grid-gap: 60px 100px
    grid-template-columns: 0.4fr 350px 350px 350px 0.3fr
    # grid-template-columns: repeat(4, 1fr)
    grid-template-rows: repeat(2, fit-content(100%)) 0.85fr
    # grid-template-areas: |
    #   "sidebar  .           .       .       ."
    #   "sidebar  grid-1      grid-2  grid-3  ."
    #   "sidebar  grid-4      grid-5  grid-6  ."
    #   "sidebar  footer      footer  footer  ."
    grid-template-areas: |
      ".  .           .       .       ."
      ".  grid-1      grid-2  grid-3  ."
      ".  grid-4      grid-5  grid-6  ."
      ".  footer      footer  footer  ."
    mediaquery:
      #phone
      "(max-width: 800px)":
        grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
        grid-template-columns: 0 repeat(2, 1fr) 0
        grid-template-rows: 0 repeat(4, fit-content(100%)) 0fr
        # grid-template-areas: |
        #   ".  .           .        ."
        #   ".  sidebar     sidebar  ."
        #   ".  grid-1      grid-2   ."
        #   ".  grid-3      grid-4   ."
        #   ".  grid-5      grid-6   ."
        #   ".  footer      footer   ."
        #   ".  .           .        ."
        grid-template-areas: |
          ".  .           .        ."
          ".  grid-1      grid-2   ."
          ".  grid-3      grid-4   ."
          ".  grid-5      grid-6   ."
          ".  footer      footer   ."
          ".  .           .        ."
      #portrait
      "(max-width: 1200px)":
        grid-gap: var(--custom-layout-card-padding)
        grid-template-columns: repeat(3, 1fr) 0
        grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
        # grid-template-areas: |
        #   "sidebar  .           .       ."
        #   "sidebar  grid-1      grid-2  ."
        #   "sidebar  grid-3      grid-4  ."
        #   "sidebar  grid-5      grid-6   ."
        #   "sidebar  footer      footer  ."
        #   "sidebar  .           .       ."
        grid-template-areas: |
          ".           .       ."
          "grid-1      grid-2  ."
          "grid-3      grid-4  ."
          "grid-5      grid-6   ."
          "footer      footer  ."
          ".           .       ."
  cards:
    - type: custom:button-card
      styles: { card: [display: none] }

    #################################################
    #                                               #
    #                     GRID-1                    #
    #                                               #
    #################################################

    - type: grid
      title: Luzes
      view_layout:
        grid-area: grid-1
      columns: 2
      cards:
        - type: custom:button-card
          entity: light.ambilight
          name: Monitor
          template:
            - light
            - icon_ledstripe

        - type: custom:button-card
          entity: light.mesa
          name: Mesa
          template:
            - light
            - icon_ledstripe

        - type: custom:button-card
          entity: light.setup_hardware_lights
          name: Hardware
          template:
            - light
            - icon_hue
            - loader

        - type: custom:button-card
          entity: switch.hyperion_controller
          name: Ambilight
          template:
            - base
            - icon_hue
            - loader

    #################################################
    #                                               #
    #                    GRID-2                     #
    #                                               #
    #################################################

    - type: grid
      title: AcessÃ³rios
      view_layout:
        grid-area: grid-2
      columns: 2
      cards:
        - type: custom:button-card
          entity: binary_sensor.my_computer_connected
          name: PC
          tap_action: !include /config/popup/pc_gamer.yaml
          template:
            - base
            - icon_imac
            - loader
            - lock
          variables:
            lock: >
              [[[
                let lock = states['person.jonathan_ferraz']
                return lock === 'not_home' ? 'locked' : 'unlocked';
              ]]]

        - type: custom:button-card
          entity: media_player.echo_dot_de_jonathan
          name: Alexa
          template:
            - base_default
            - icon_alexa

          variables:
            circle_input: >
              [[[
                let sensor = states['media_player.echo_dot_de_jonathan'];
                return sensor === undefined || sensor.state;
              ]]]

        - type: custom:button-card
          entity: switch.monitor_power
          name: Monitores
          template:
            - base
            - icon_tv
            - loader

        - type: custom:button-card
          entity: climate.ar_condicionado
          name: Ar condicionado
          hold_action: !include /config/popup/ar_climate.yaml
          template:
            - base
            - icon_climate
            - climate
          variables:
            circle_input: >
              [[[
                if (entity) {
                  return entity.state === 'cool' ?
                    entity.attributes.temperature :
                    entity.attributes.current_temperature;
                }
              ]]]

    #################################################
    #                                               #
    #                    GRID-3                     #
    #                                               #
    #################################################

    - type: grid
      title: House
      view_layout:
        grid-area: grid-3
      columns: 2
      cards:
        - type: custom:button-card
          entity: person.jonathan_ferraz
          name: Jonathan
          triggers_update:
            - sensor.jonathan_last_changed
          tap_action: !include /config/popup/house_jonathan.yaml
          hold_action:
            action: none
          variables:
            retain: sensor.jonathan_last_changed
          template: person

        - type: custom:button-card
          entity: person.matheus_ferraz
          name: Matheus
          triggers_update:
            - sensor.matheus_last_changed
          tap_action: !include /config/popup/house_matheus.yaml
          hold_action:
            action: none
          variables:
            retain: sensor.matheus_last_changed
          template: person

        - type: custom:button-card
          entity: script.home_arrive
          name: Casa
          hold_action:
            action: none
          variables:
            circle_input: >
              [[[
                return entity === undefined || Math.round(states['zone.home'].state / 2 * 100 ) ;
              ]]]
          custom_fields:
            circle: >
              [[[
                  let input = variables.circle_input,
                    radius = 20.5,
                    circumference = radius * 12;
                  let inner_text = states['zone.home'].state
                  return `
                    <svg viewBox="0 0 50 50">
                      <circle cx="25" cy="25" r="20.5" stroke="#8d8e90" stroke-width="1.5" fill="#00000000" />
                      <text x="49%" y="53%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${inner_text} / 2</text>
                    </svg>
                  `;
              ]]]
          template:
            - base
            - icon_home
            - circle

    #################################################
    #                                               #
    #                    FOOTER                     #
    #                                               #
    #################################################

    - type: horizontal-stack
      view_layout:
        grid-area: footer
      cards:
        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:nas"></ha-icon> HASS
          tap_action: !include /config/popup/footer/hass.yaml
          variables:
            notify: >
              [[[
                let hass_installed = hass.config.version,
                  hass_version_latest = states['sensor.hass_version_latest']

                if (hass_version_latest && hass_version_latest.state.includes('.')) {

                  let hass_latest = hass_version_latest.state,
                    hass_count = hass_installed !== hass_latest ? 1 : 0;
                  return hass_count;
                }
                return 0;
              ]]]
          template: footer

        - type: custom:button-card
          name: >
            <ha-icon icon="mdi:arrow-up-bold-circle-outline"></ha-icon> Updates
          tap_action: !include /config/popup/footer/updates.yaml
          variables:
            notify: >
              [[[
                let hass_installed = hass.config.version,
                  hass_version_latest = states['sensor.hass_version_latest'],
                  hacs = states['sensor.hacs'];

                if (hass_version_latest && hass_version_latest.state.includes('.')
                  && hacs && Number.isInteger(parseInt(hacs.state))) {

                  let hass_latest = hass_version_latest.state,
                    hass_count = hass_installed !== hass_latest ? 1 : 0;
                  return hass_count + parseInt(hacs.state);
                }
                return 0;
              ]]]
          template: footer
